[{"D:\\Chat-app\\client\\src\\store.js":"1","D:\\Chat-app\\client\\src\\container\\userList.js":"2","D:\\Chat-app\\client\\src\\container\\signUp.js":"3","D:\\Chat-app\\client\\src\\container\\login.js":"4","D:\\Chat-app\\client\\src\\container\\dashBoard.js":"5","D:\\Chat-app\\client\\src\\components\\showHidePassword.js":"6"},{"size":679,"mtime":1673109969822,"results":"7","hashOfConfig":"8"},{"size":1032,"mtime":1673455018709,"results":"9","hashOfConfig":"8"},{"size":3003,"mtime":1673104654561,"results":"10","hashOfConfig":"8"},{"size":2391,"mtime":1674396720831,"results":"11","hashOfConfig":"8"},{"size":1718,"mtime":1674482712629,"results":"12","hashOfConfig":"8"},{"size":530,"mtime":1674396174512,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i6p10n",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Chat-app\\client\\src\\store.js",[],"D:\\Chat-app\\client\\src\\container\\userList.js",[],["29","30"],"D:\\Chat-app\\client\\src\\container\\signUp.js",["31"],"import React from 'react';\r\n import { Formik, Form, Field } from 'formik';\r\n import * as Yup from 'yup';\r\n import CountryData from '../countries.json'\r\n import { useNavigate, Link } from 'react-router-dom';\r\n \r\nconst SignUp = ()=>{\r\n  const navigate = useNavigate()\r\n\r\n  const SignUpUser = async(values)=>{\r\n      const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(values)\r\n      };\r\n\r\n      const response = await fetch('http://localhost:5000/signup', requestOptions);\r\n      const data = await response.json()\r\n\r\n      if(data){\r\n          alert(data.msg)\r\n          navigate('/')\r\n      }\r\n  }\r\n\r\n const SignUpSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n  .min(2, 'Too Short!')\r\n  .max(50, 'Too Long!')\r\n  .required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n   password: Yup.string()\r\n     .min(2, 'Too Short!')\r\n     .max(50, 'Too Long!')\r\n     .required('Required'),\r\n    phoneNumber:Yup.string().required('Required!')\r\n   \r\n });\r\n\r\n//  const SignUp = () => (\r\n  return(\r\n   <div>\r\n     <h1>Sign Up</h1>\r\n     <Formik\r\n       initialValues={{\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n        country: '',\r\n       }}\r\n       \r\n       validationSchema={SignUpSchema}\r\n        onSubmit={values=>{\r\n        SignUpUser(values)\r\n       }}\r\n     >\r\n       {({ errors, touched, values, handleChange, handleBlur, handleSubmit }) => (\r\n         <Form>\r\n         <Field name=\"name\" placeholder=\"Enter your name\"/>\r\n           {errors.name && touched.name ? (\r\n             <div>{errors.name}</div>) : null}<br/>\r\n         <Field name=\"email\" type=\"email\" placeholder=\"Enter your Email\"/>\r\n           {errors.email && touched.email ? <div>{errors.email}</div> : null}<br/>\r\n         <Field name=\"password\" placeholder=\"Enter your password\"/>\r\n           {errors.password && touched.password ? (\r\n             <div>{errors.password}</div>\r\n           ) : null}<br/>\r\n        <Field name=\"phoneNumber\" placeholder=\"Your Phone Number\" value={values.phoneNumber} onChange={handleChange} onBlur={handleBlur} />\r\n            {errors.phoneNumber && touched.phoneNumber ? (<div className=\"error\">{errors.phoneNumber}</div>) : null}<br/>\r\n            <select name=\"country\" value={values.country} onChange={handleChange} onBlur={handleBlur}>\r\n             <option value=\"\" disabled=\"disabled\" label=\"Select a Country\"></option>\r\n             {CountryData.map(country => {\r\n               const {name} = country\r\n                 return(\r\n                <option value={name} label={name} key={name}>{name}</option>\r\n                )\r\n            })}\r\n            </select>\r\n            {errors.country && touched.country ? (<div className=\"error\">{errors.country}</div>) : null}<br/>\r\n           <button type=\"submit\">Submit</button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n   \r\n );\r\n}\r\n export default SignUp;\r\n",["32","33"],"D:\\Chat-app\\client\\src\\container\\login.js",["34","35","36"],"D:\\Chat-app\\client\\src\\container\\dashBoard.js",["37","38","39","40","41","42","43","44","45"],"D:\\Chat-app\\client\\src\\components\\showHidePassword.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":24,"nodeType":"52","messageId":"53","endLine":5,"endColumn":28},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","severity":1,"message":"56","line":6,"column":24,"nodeType":"52","messageId":"53","endLine":6,"endColumn":35},{"ruleId":"50","severity":1,"message":"57","line":8,"column":30,"nodeType":"52","messageId":"53","endLine":8,"endColumn":35},{"ruleId":"50","severity":1,"message":"58","line":8,"column":37,"nodeType":"52","messageId":"53","endLine":8,"endColumn":43},{"ruleId":"59","severity":2,"message":"60","line":1,"column":24,"nodeType":"52","messageId":"61","endLine":1,"endColumn":32},{"ruleId":"59","severity":2,"message":"62","line":7,"column":6,"nodeType":"52","messageId":"61","endLine":7,"endColumn":11},{"ruleId":"59","severity":2,"message":"63","line":8,"column":28,"nodeType":"52","messageId":"61","endLine":8,"endColumn":32},{"ruleId":"59","severity":2,"message":"64","line":9,"column":24,"nodeType":"52","messageId":"61","endLine":9,"endColumn":29},{"ruleId":"65","severity":2,"message":"66","line":21,"column":29,"nodeType":"67","endLine":21,"endColumn":44},{"ruleId":"65","severity":2,"message":"68","line":23,"column":38,"nodeType":"67","endLine":23,"endColumn":50},{"ruleId":"65","severity":2,"message":"69","line":53,"column":23,"nodeType":"67","endLine":53,"endColumn":41},{"ruleId":"59","severity":2,"message":"70","line":69,"column":12,"nodeType":"52","messageId":"61","endLine":69,"endColumn":21},{"ruleId":"59","severity":2,"message":"71","line":70,"column":16,"nodeType":"52","messageId":"61","endLine":70,"endColumn":25},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["72"],["73"],"'useSelector' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","no-undef","'ReactDOM' is not defined.","undef","'icons' is not defined.","'antd' is not defined.","'React' is not defined.","react/jsx-no-undef","'DesktopOutlined' is not defined.","JSXIdentifier","'MailOutlined' is not defined.","'MenuUnfoldOutlined' is not defined.","'mountNode' is not defined.","'Dashboard' is not defined.","no-global-assign","no-unsafe-negation"]